Path.swift
	public protocol Path
	var path: String { get }
OauthError.swift
	public enum OauthError: ErrorType
	case AuthorizationUrlGeneration(NSError)
	case StateInconsistence
	case InvalidRedirectUrl
	case MissingParameter
	case StateMismatch
	case APIError(NSError)
	case InvalidResponse
	case TokenNotFound
	case Unknown
Session.swift
	case All
	case Some([String])
	public func storeDict() -> [String: String]
	public init(storeDict: [String: AnyObject]) throws
StorableError.swift
	case InvalidData(String)
	case MissingData(String)
KeyValueStorable.swift
	public func store<T: KeyValueStore>(key: String, store: T)
	public static func restore<T: KeyValueStore>(key: String, store: T) throws -> Self?
	public static func clear<T: KeyValueStore>(key: String, store: T)
Oauth2WebViewController.swift
	public final class Oauth2WebViewController: UIViewController
	required public init?(coder aDecoder: NSCoder)
	public override func viewDidLoad()
Oauth2.swift
	case OpenUrl(NSURL)
	case NewSession(Session)
Oauth2WebView.swift
	public func webView(webView: WKWebView, didReceiveServerRedirectForProvisionalNavigation navigation: WKNavigation!)
